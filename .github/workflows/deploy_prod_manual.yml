name: Deploy Production - Manual

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch"
        required: true
        default: "main"
      folder:
        type: choice
        description: "Serviço"
        options:
          - backend

jobs:
  sls-deploy-production:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CICD_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CICD_SECRET_KEY }}

    steps:
      - name: Checkout Repositório
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Serverless
        run: npm install -g serverless@3

      - name: Install Node dependencies
        run: |
          cd ${{ github.event.inputs.folder }}
          npm install

      - name: Deploy Serverless
        run: |
          cd ${{ github.event.inputs.folder }}
          NODE_OPTIONS=--max_old_space_size=8192 serverless deploy --stage production --verbose

  frontend-deploy-s3:
    runs-on: ubuntu-latest
    needs: sls-deploy-production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CICD_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CICD_SECRET_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_FRONTEND }}
      AWS_REGION: 'us-east-1'
    steps:
      - name: Checkout Repositório
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependências do frontend
        run: |
          cd frontend
          npm install

      - name: Build frontend Angular
        run: |
          cd frontend
          npx ng build --configuration production

      - name: Deploy para o S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_FRONTEND }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CICD_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CICD_SECRET_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: 'frontend/dist/'
